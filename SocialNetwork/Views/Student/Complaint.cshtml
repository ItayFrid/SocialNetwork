@model SocialNetwork.ViewModels.ViewModel

@{
    ViewBag.Title = "Complaint";
}

<h2>Complaint</h2>
<hr />
@using (Html.BeginForm("NewComplaint", "Student", FormMethod.Post))
{
    <div class="form-group row">
        <label for="inputSender" class="col-sm-2 col-form-label">Sender</label>
        <div class="col-sm-10">
            <input id="inputSender" class="form-control" type="text" placeholder="@Model.student.name" readonly>
        </div>
    </div>

    <div class="form-group row">
        <label for="inputTarget" class="col-sm-2 col-form-label">Target</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(m => m.complaint.Target, new SelectList(Model.teachers, "email", "name"), new { @class = "form-control", id = "inputTarget" })
            <small class="text-danger">@Html.ValidationMessageFor(x => x.complaint.Target)</small>
        </div>
    </div>

    <div class="form-group row">
        <label for="inputBody" class="col-sm-2 col-form-label">Body</label>
        <div class="col-sm-10">
            @Html.TextAreaFor(m => m.complaint.body, new { @class = "form-control", id = "inputBody" })
            <small class="text-danger">@Html.ValidationMessageFor(x => x.complaint.body)</small>
        </div>
    </div>
    <input id="sender" name="@User.Identity.Name" type="hidden" value="@User.Identity.Name" />
    
    if (Model.teachers.Count == 0)
    {
        <input class="btn btn-outline-primary" id="submit" type="submit" value="Add Complaint" disabled/>
        <small class="text-danger">No teachers in database</small>
    }
    else
    {
        <input class="btn btn-outline-primary" id="submit" type="submit" value="Add Complaint" />
    }
    <h4 class="text-danger">@ViewBag.message</h4>
}
